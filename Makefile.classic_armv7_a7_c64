# This build was put together and is maintained by ModMyClassic.com for Libretro.
# The purpose is to give Libretro a proper "official" build platform for classic consoles.
# If you need any help in building for the classics or have any questions then please visit
# https://modmyclassic.com/comp and we will help in any way possible!

# Building Prerequisites ##############
# arm-linux-gnueabihf-gcc-8
# arm-linux-gnueabihf-g++-8
# arm-linux-gnueabihf-as
# arm-linux-gnueabihf-strip
# bc

include version.all

# Classic Readme VariablesÂ ############
CLASSIC_ALT_VER := $(shell echo $(RARCH_VERSION) | tr . _)
CLASSIC_MODS_VER := Official_Retroarch_v$(CLASSIC_ALT_VER)c_COptimised
CLASSIC_MODS_NAME := RetroArch v$(RARCH_VERSION)c \(Official Classic Optimised\)
CLASSIC_VERSION := $(RARCH_VERSION)c \(Classic+\)
MOD_CREATOR := Libretro + ModMyClassic
MOD_CATEGORY := RetroArch
GIT_COMMIT := $(shell echo "`git rev-parse --short HEAD``git diff-index --quiet HEAD -- || echo '-dirty'`")

# General Shared Variables ############
TARGET := retroarch
CC_V = arm-linux-gnueabihf-gcc-8
CXX_V = arm-linux-gnueabihf-g++-8
AS_V = arm-linux-gnueabihf-as
CC_AS_V = arm-linux-gnueabihf-gcc-8

# Libretro Defines ####################
#HAVE_CLASSIC = Classic Hook, disable some features
#HAVE_C_A7A7 = Classic Armv7 Cortex A7 optimisation override
#HAVE_HAKCHI = Hakchi Hook, change default configurations etc (TODO)

all: $(TARGET)

retroarch:
	#Build the RetroArch Binary for cross platform classics (ARMv7 Cortex A7)
	./configure --host=arm-linux-gnueabihf --enable-mali_fbdev --disable-freetype --enable-opengles --enable-udev --enable-alsa --enable-neon --enable-floathard --disable-discord
	echo "COMPILING AGAINST LIBRARY: $LD_LIBRARY_PATH"
	make CC=$(CC_V) CXX=$(CXX_V) AS=$(AS_V) CC_AS=$(CC_AS_V) LDFLAGS_SDL=-lSDL2 HAVE_CLASSIC=1 HAVE_C_A7A7=1 -j #Cook it
	arm-linux-gnueabihf-strip -v retroarch

clean:
	rm -rf obj-unix
	rm -f *.d
	rm -f *.o
	rm -f audio/*.o
	rm -f conf/*.o
	rm -f gfx/*.o
	rm -f gfx/drivers_font/*.o
	rm -f gfx/drivers_font_renderer/*.o
	rm -f gfx/drivers_context/*.o
	rm -f gfx/py_state/*.o
	rm -f compat/*.o
	rm -f record/*.o
	rm -f input/*.o
	rm -f tools/*.o
	rm -f $(BINDIR)/retroarch
	rm -f $(BINDIR)/retroarch-joyconfig
	rm -f $(PNDDIR)/readme.html
	rm -f retroarch
	rm -f $(CLASSIC_MODS_VER).hmod
	rm -f version.all version.dtd
	mv -f version_BACKUP.all version.all || echo "Backup Doesn't Exist - Ignoring..."
	mv -f version_BACKUP.dtd version.dtd || echo "Backup Doesn't Exist - Ignoring..."
	rm -f *_BACKUP*
